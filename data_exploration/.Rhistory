# Open a dialog to choose the file
file_path <- file.choose()
# Extract the directory part of the file path
file_dir <- dirname(file_path)
# Set the working directory
setwd(file_dir)
file_path
file_dir
# Open a dialog to choose the file
file_path <- file.choose('data_exploration')
# Extract the directory part of the file path
dirname(rstudioapi::getSourceEditorContext()$path)
# Extract the directory part of the file path
dirname(rstudioapi::getSourceEditorContext()$path)
library(readxl)
library(dplyr)
library(ggplot2)
library(biomaRt)
library(clusterProfiler)
library(fgsea)
library(org.Hs.eg.db)
library(enrichplot)
library(ggridges)
# Extract the directory part of the file path
file_path <- dirname(rstudioapi::getSourceEditorContext()$path)
# Set the working directory
setwd('/Users/alejandroadriaquelozano/Documents/Internships/MacsBio/')
dea <- read_xlsx('BulkRNA-Seq-DEGs.xlsx')
pvalue_cut <- 0.05
logfold_cut <- 0.58
res_filtered <- dea %>% filter(`p-Value` <  pvalue_cut)
res_filtered <- res_filtered %>% filter(logFC < -logfold_cut | logFC > logfold_cut)
# Prepare the data, including applying the significance cutoff
res <- dea %>%
mutate(significant = case_when(
`p-Value` < pvalue_cut & logFC > logfold_cut ~ "Upreg",
`p-Value` < pvalue_cut & logFC < -logfold_cut ~ "Downreg",
TRUE ~ "Not Significant"
))
# Define custom legend labels
legend_labels <- c("Upreg" = "Up-Regulated Genes",
"Downreg" = "Down-Regulated Genes",
"Not Significant" = "Non-DE Genes")
# Customize volcano plot
ggplot(res, aes(x = logFC, y = -log10(`p-Value`))) +
geom_point(aes(color = significant), size = 1) +
scale_color_manual(values = c("Upreg" = "red", 'Downreg' ='blue',"Not Significant" = "grey"),
labels = legend_labels,
name = "Gene Expression Significance") +  # Specify custom legend title
geom_hline(yintercept = -log10(pvalue_cut), linetype = "dashed", color = "gray") +
geom_vline(xintercept = c(-logfold_cut, logfold_cut), linetype = "dashed", color = "gray") +  # Add fold change cutoff
labs(
x = "Log2 Fold Change",
y = "-log10(p-value)") +
theme_minimal() +
theme(legend.text = element_text(size = 14))
# Enrichment analysis wikipathways
res_filtered <- dea %>% filter(`p-Value` <  pvalue_cut)
res_filtered_up <- res_filtered %>% filter(logFC > logfold_cut)
res_filtered_down <- res_filtered %>% filter(logFC < -logfold_cut)
mart <- useMart("ensembl", dataset="hsapiens_gene_ensembl")
entrez_names_up <- getBM(c("entrezgene_id"), "hgnc_symbol", res_filtered_up$gene, mart)
entrez_names_down <- getBM(c("entrezgene_id"), "hgnc_symbol", res_filtered_down$gene, mart)
enrich_result_up <- enrichWP(gene=entrez_names_up$entrezgene_id ,organism = "Homo sapiens" )
enrich_result_down <- enrichWP(gene=entrez_names_down$entrezgene_id ,organism = "Homo sapiens" )
resutls_enrich_up <-data.frame(enrich_result_up)
resutls_enrich_down <-data.frame(enrich_result_down)
setwd('/Users/alejandroadriaquelozano/Documents/Internships/MacsBio/Data_exploration/')
write.csv(resutls_enrich_up, 'resutls_enrich_up.csv')
write.csv(resutls_enrich_down, 'resutls_enrich_down.csv')
dotplot(enrich_result_up)
dotplot(enrich_result_down)
# Enrichment analysis GO BP
enrich_result_up_GO <- enrichGO(gene=entrez_names_up$entrezgene_id ,OrgDb = org.Hs.eg.db ,ont = 'BP')
enrich_result_down_GO <- enrichGO(gene=entrez_names_down$entrezgene_id ,OrgDb = org.Hs.eg.db ,ont = 'BP')
resutls_enrich_up_GO <-data.frame(enrich_result_up_GO)
resutls_enrich_down_GO <-data.frame(enrich_result_down_GO)
write.csv(resutls_enrich_up_GO, 'resutls_enrich_up_GO.csv')
write.csv(resutls_enrich_down_GO, 'resutls_enrich_down_GO.csv')
dotplot(enrich_result_up_GO)
dotplot(enrich_result_down_GO)
# GSEA
setwd('/Users/alejandroadriaquelozano/Documents/Internships/MacsBio/Data_exploration/')
#Prepare IDs
# identifier mapping from Ensembl to Entrez Gene
ids <- clusterProfiler::bitr(dea$gene,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = org.Hs.eg.db)
# genes without Entrez Gene identifier are removed
dea <- merge(dea, ids, by.x = "gene", by.y="SYMBOL")
rankings <- sign(dea$logFC)*(-log10(dea$`p-Value`)) # we will use the signed p values from spatial DGE as ranking
names(rankings) <- dea$ENTREZID # genes as names#
rankings <- sort(rankings, decreasing = TRUE)
# Analysis and Visualisation gsea (WP)
gsea <- clusterProfiler::gseWP(rankings, organism = "Homo sapiens")
library(readxl)
library(dplyr)
library(ggplot2)
library(biomaRt)
library(clusterProfiler)
library(fgsea)
library(org.Hs.eg.db)
library(enrichplot)
library(ggridges)
# Extract the directory part of the file path
file_path <- dirname(rstudioapi::getSourceEditorContext()$path)
# Set the working directory
setwd(file_path)
dea <- read_xlsx('BulkRNA-Seq-DEGs.xlsx')
pvalue_cut <- 0.05
logfold_cut <- 0.58
res_filtered <- dea %>% filter(`p-Value` <  pvalue_cut)
res_filtered <- res_filtered %>% filter(logFC < -logfold_cut | logFC > logfold_cut)
# Prepare the data, including applying the significance cutoff
res <- dea %>%
mutate(significant = case_when(
`p-Value` < pvalue_cut & logFC > logfold_cut ~ "Upreg",
`p-Value` < pvalue_cut & logFC < -logfold_cut ~ "Downreg",
TRUE ~ "Not Significant"
))
# Define custom legend labels
legend_labels <- c("Upreg" = "Up-Regulated Genes",
"Downreg" = "Down-Regulated Genes",
"Not Significant" = "Non-DE Genes")
# Customize volcano plot
ggplot(res, aes(x = logFC, y = -log10(`p-Value`))) +
geom_point(aes(color = significant), size = 1) +
scale_color_manual(values = c("Upreg" = "red", 'Downreg' ='blue',"Not Significant" = "grey"),
labels = legend_labels,
name = "Gene Expression Significance") +  # Specify custom legend title
geom_hline(yintercept = -log10(pvalue_cut), linetype = "dashed", color = "gray") +
geom_vline(xintercept = c(-logfold_cut, logfold_cut), linetype = "dashed", color = "gray") +  # Add fold change cutoff
labs(
x = "Log2 Fold Change",
y = "-log10(p-value)") +
theme_minimal() +
theme(legend.text = element_text(size = 14))
# Enrichment analysis wikipathways
res_filtered <- dea %>% filter(`p-Value` <  pvalue_cut)
res_filtered_up <- res_filtered %>% filter(logFC > logfold_cut)
res_filtered_down <- res_filtered %>% filter(logFC < -logfold_cut)
mart <- useMart("ensembl", dataset="hsapiens_gene_ensembl")
entrez_names_up <- getBM(c("entrezgene_id"), "hgnc_symbol", res_filtered_up$gene, mart)
entrez_names_down <- getBM(c("entrezgene_id"), "hgnc_symbol", res_filtered_down$gene, mart)
enrich_result_up <- enrichWP(gene=entrez_names_up$entrezgene_id ,organism = "Homo sapiens" )
enrich_result_down <- enrichWP(gene=entrez_names_down$entrezgene_id ,organism = "Homo sapiens" )
resutls_enrich_up <-data.frame(enrich_result_up)
resutls_enrich_down <-data.frame(enrich_result_down)
write.csv(resutls_enrich_up, 'resutls_enrich_up.csv')
write.csv(resutls_enrich_down, 'resutls_enrich_down.csv')
dotplot(enrich_result_up)
dotplot(enrich_result_down)
# Enrichment analysis GO BP
enrich_result_up_GO <- enrichGO(gene=entrez_names_up$entrezgene_id ,OrgDb = org.Hs.eg.db ,ont = 'BP')
enrich_result_down_GO <- enrichGO(gene=entrez_names_down$entrezgene_id ,OrgDb = org.Hs.eg.db ,ont = 'BP')
resutls_enrich_up_GO <-data.frame(enrich_result_up_GO)
resutls_enrich_down_GO <-data.frame(enrich_result_down_GO)
write.csv(resutls_enrich_up_GO, 'resutls_enrich_up_GO.csv')
write.csv(resutls_enrich_down_GO, 'resutls_enrich_down_GO.csv')
dotplot(enrich_result_up_GO)
dotplot(enrich_result_down_GO)
# GSEA
#Prepare IDs
# identifier mapping from Ensembl to Entrez Gene
ids <- clusterProfiler::bitr(dea$gene,fromType = "SYMBOL",toType = "ENTREZID",OrgDb = org.Hs.eg.db)
# genes without Entrez Gene identifier are removed
dea <- merge(dea, ids, by.x = "gene", by.y="SYMBOL")
rankings <- sign(dea$logFC)*(-log10(dea$`p-Value`)) # we will use the signed p values from spatial DGE as ranking
names(rankings) <- dea$ENTREZID # genes as names#
rankings <- sort(rankings, decreasing = TRUE)
# Analysis and Visualisation gsea (WP)
gsea <- clusterProfiler::gseWP(rankings, organism = "Homo sapiens")
dotplot(gsea, showCategory=20) + ggtitle("dotplot for GSEA") + theme(axis.text.y=element_text(size=6))
edo <- pairwise_termsim(gsea)
emapplot(edo,cex_category=1.5, cex_label_category=0.5)
# The ridgeplot will visualize expression distributions of core enriched genes for GSEA enriched categories. It helps users to interpret up/down-regulated pathways.
ridgeplot(gsea) + theme(axis.text.y=element_text(size=6))
# Traditional methods for visualizing GSEA result
gseaplot(gsea, geneSetID = 1, by = "runningScore", title = edo$Description[1])
gseaplot2(gsea, geneSetID = 1:3)
#Analysis and Visualisation gsea (GO)
ego <- clusterProfiler::gseGO(rankings, ont = "BP", OrgDb = org.Hs.eg.db, minGSSize = 100, maxGSSize = 500, pvalueCutoff = 0.05, verbose = FALSE)
edo <- pairwise_termsim(ego)
emapplot(edo, cex_label_category=0.5)
# List of packages to check and install if necessary
packages <- c("readxl", "dplyr", "ggplot2", "biomaRt", "clusterProfiler",
"fgsea", "org.Hs.eg.db", "enrichplot", "ggridges")
# Loop through the packages, install if not already installed
for (pkg in packages) {
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg)
library(pkg, character.only = TRUE)
}
}
